// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_common.proto
package com.czhj.sdk.common.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class WXProgramReq extends AndroidMessage<WXProgramReq, WXProgramReq.Builder> {
    public static final ProtoAdapter<WXProgramReq> ADAPTER = new ProtoAdapter_WXProgramReq();

    public static final Parcelable.Creator<WXProgramReq> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_WX_API_VER = 0;

    public static final String DEFAULT_OPENSDK_VER = "";

    public static final Boolean DEFAULT_WX_INSTALLED = false;

    /**
     * 用户微信内SDK版本
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#INT32"
    )
    public final Integer wx_api_ver;

    /**
     * 微信openSDK版本
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#STRING"
    )
    public final String opensdk_ver;

    /**
     * 用户是否已安装微信
     */
    @WireField(
            tag = 3,
            adapter = "com.squareup.wire.ProtoAdapter#BOOL"
    )
    public final Boolean wx_installed;

    public WXProgramReq(Integer wx_api_ver, String opensdk_ver, Boolean wx_installed) {
        this(wx_api_ver, opensdk_ver, wx_installed, ByteString.EMPTY);
    }

    public WXProgramReq(Integer wx_api_ver, String opensdk_ver, Boolean wx_installed,
                        ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.wx_api_ver = wx_api_ver;
        this.opensdk_ver = opensdk_ver;
        this.wx_installed = wx_installed;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.wx_api_ver = wx_api_ver;
        builder.opensdk_ver = opensdk_ver;
        builder.wx_installed = wx_installed;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof WXProgramReq)) return false;
        WXProgramReq o = (WXProgramReq) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(wx_api_ver, o.wx_api_ver)
                && Internal.equals(opensdk_ver, o.opensdk_ver)
                && Internal.equals(wx_installed, o.wx_installed);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (wx_api_ver != null ? wx_api_ver.hashCode() : 0);
            result = result * 37 + (opensdk_ver != null ? opensdk_ver.hashCode() : 0);
            result = result * 37 + (wx_installed != null ? wx_installed.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (wx_api_ver != null) builder.append(", wx_api_ver=").append(wx_api_ver);
        if (opensdk_ver != null) builder.append(", opensdk_ver=").append(opensdk_ver);
        if (wx_installed != null) builder.append(", wx_installed=").append(wx_installed);
        return builder.replace(0, 2, "WXProgramReq{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<WXProgramReq, Builder> {
        public Integer wx_api_ver = DEFAULT_WX_API_VER;

        public String opensdk_ver = DEFAULT_OPENSDK_VER;

        public Boolean wx_installed = DEFAULT_WX_INSTALLED;

        public Builder() {
        }

        /**
         * 用户微信内SDK版本
         */
        public Builder wx_api_ver(Integer wx_api_ver) {
            this.wx_api_ver = wx_api_ver;
            return this;
        }

        /**
         * 微信openSDK版本
         */
        public Builder opensdk_ver(String opensdk_ver) {
            this.opensdk_ver = opensdk_ver;
            return this;
        }

        /**
         * 用户是否已安装微信
         */
        public Builder wx_installed(Boolean wx_installed) {
            this.wx_installed = wx_installed;
            return this;
        }

        @Override
        public WXProgramReq build() {
            return new WXProgramReq(wx_api_ver, opensdk_ver, wx_installed, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_WXProgramReq extends ProtoAdapter<WXProgramReq> {
        public ProtoAdapter_WXProgramReq() {
            super(FieldEncoding.LENGTH_DELIMITED, WXProgramReq.class);
        }

        @Override
        public int encodedSize(WXProgramReq value) {
            return ProtoAdapter.INT32.encodedSizeWithTag(1, value.wx_api_ver)
                    + ProtoAdapter.STRING.encodedSizeWithTag(2, value.opensdk_ver)
                    + ProtoAdapter.BOOL.encodedSizeWithTag(3, value.wx_installed)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, WXProgramReq value) throws IOException {
            ProtoAdapter.INT32.encodeWithTag(writer, 1, value.wx_api_ver);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.opensdk_ver);
            ProtoAdapter.BOOL.encodeWithTag(writer, 3, value.wx_installed);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public WXProgramReq decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.wx_api_ver(ProtoAdapter.INT32.decode(reader));
                        break;
                    case 2:
                        builder.opensdk_ver(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.wx_installed(ProtoAdapter.BOOL.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public WXProgramReq redact(WXProgramReq value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
