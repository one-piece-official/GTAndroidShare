// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_common.proto
package com.czhj.sdk.common.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

/**
 * 二维尺寸信息
 */
public final class Size extends AndroidMessage<Size, Size.Builder> {
    public static final ProtoAdapter<Size> ADAPTER = new ProtoAdapter_Size();

    public static final Parcelable.Creator<Size> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_WIDTH = 0;

    public static final Integer DEFAULT_HEIGHT = 0;

    /**
     * 宽度, 必填！
     */
    @WireField(
            tag = 1,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer width;

    /**
     * 高度, 必填！
     */
    @WireField(
            tag = 2,
            adapter = "com.squareup.wire.ProtoAdapter#UINT32"
    )
    public final Integer height;

    public Size(Integer width, Integer height) {
        this(width, height, ByteString.EMPTY);
    }

    public Size(Integer width, Integer height, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.width = width;
        this.height = height;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.width = width;
        builder.height = height;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Size)) return false;
        Size o = (Size) other;
        return unknownFields().equals(o.unknownFields())
                && Internal.equals(width, o.width)
                && Internal.equals(height, o.height);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (width != null ? width.hashCode() : 0);
            result = result * 37 + (height != null ? height.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (width != null) builder.append(", width=").append(width);
        if (height != null) builder.append(", height=").append(height);
        return builder.replace(0, 2, "Size{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Size, Builder> {
        public Integer width = DEFAULT_WIDTH;

        public Integer height = DEFAULT_HEIGHT;

        public Builder() {
        }

        /**
         * 宽度, 必填！
         */
        public Builder width(Integer width) {
            this.width = width;
            return this;
        }

        /**
         * 高度, 必填！
         */
        public Builder height(Integer height) {
            this.height = height;
            return this;
        }

        @Override
        public Size build() {
            return new Size(width, height, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Size extends ProtoAdapter<Size> {
        public ProtoAdapter_Size() {
            super(FieldEncoding.LENGTH_DELIMITED, Size.class);
        }

        @Override
        public int encodedSize(Size value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.width)
                    + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.height)
                    + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Size value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.width);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.height);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Size decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.width(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.height(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Size redact(Size value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
