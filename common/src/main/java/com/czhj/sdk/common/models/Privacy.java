// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_common.proto
package com.czhj.sdk.common.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class Privacy extends AndroidMessage<Privacy, Privacy.Builder> {
    public static final ProtoAdapter<Privacy> ADAPTER = new ProtoAdapter_Privacy();

    public static final Parcelable.Creator<Privacy> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_GDPR_CONSENT = 0;

    public static final Integer DEFAULT_CHILD_PROTECTION = 0;

    public static final Integer DEFAULT_AGE = 0;

    /**
     * gdpr 授权状态
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer gdpr_consent;

    /**
     * 儿童保护
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer child_protection;

    /**
     * 用户年龄
     */
    @WireField(tag = 3, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer age;

    public Privacy(Integer gdpr_consent, Integer child_protection, Integer age) {
        this(gdpr_consent, child_protection, age, ByteString.EMPTY);
    }

    public Privacy(Integer gdpr_consent, Integer child_protection, Integer age, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.gdpr_consent = gdpr_consent;
        this.child_protection = child_protection;
        this.age = age;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.gdpr_consent = gdpr_consent;
        builder.child_protection = child_protection;
        builder.age = age;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Privacy)) return false;
        Privacy o = (Privacy) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(gdpr_consent, o.gdpr_consent) && Internal.equals(child_protection, o.child_protection) && Internal.equals(age, o.age);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (gdpr_consent != null ? gdpr_consent.hashCode() : 0);
            result = result * 37 + (child_protection != null ? child_protection.hashCode() : 0);
            result = result * 37 + (age != null ? age.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (gdpr_consent != null) builder.append(", gdpr_consent=").append(gdpr_consent);
        if (child_protection != null)
            builder.append(", child_protection=").append(child_protection);
        if (age != null) builder.append(", age=").append(age);
        return builder.replace(0, 2, "Privacy{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Privacy, Builder> {
        public Integer gdpr_consent = DEFAULT_GDPR_CONSENT;

        public Integer child_protection = DEFAULT_CHILD_PROTECTION;

        public Integer age = DEFAULT_AGE;

        public Builder() {
        }

        /**
         * gdpr 授权状态
         */
        public Builder gdpr_consent(Integer gdpr_consent) {
            this.gdpr_consent = gdpr_consent;
            return this;
        }

        /**
         * 儿童保护
         */
        public Builder child_protection(Integer child_protection) {
            this.child_protection = child_protection;
            return this;
        }

        /**
         * 用户年龄
         */
        public Builder age(Integer age) {
            this.age = age;
            return this;
        }

        @Override
        public Privacy build() {
            return new Privacy(gdpr_consent, child_protection, age, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Privacy extends ProtoAdapter<Privacy> {
        public ProtoAdapter_Privacy() {
            super(FieldEncoding.LENGTH_DELIMITED, Privacy.class);
        }

        @Override
        public int encodedSize(Privacy value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.gdpr_consent) + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.child_protection) + ProtoAdapter.UINT32.encodedSizeWithTag(3, value.age) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Privacy value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.gdpr_consent);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.child_protection);
            ProtoAdapter.UINT32.encodeWithTag(writer, 3, value.age);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Privacy decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.gdpr_consent(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.child_protection(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 3:
                        builder.age(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Privacy redact(Privacy value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
