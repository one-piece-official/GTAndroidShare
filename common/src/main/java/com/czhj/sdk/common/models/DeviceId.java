// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_common.proto
package com.czhj.sdk.common.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

/**
 * 唯一用户标识，优先使用明文，必需按要求填写，具体填写指导详见接口说明文档
 */
public final class DeviceId extends AndroidMessage<DeviceId, DeviceId.Builder> {
    public static final ProtoAdapter<DeviceId> ADAPTER = new ProtoAdapter_DeviceId();

    public static final Parcelable.Creator<DeviceId> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final String DEFAULT_IDFA = "";

    public static final String DEFAULT_UDID = "";

    public static final String DEFAULT_USER_ID = "";

    public static final String DEFAULT_IMEI = "";

    public static final String DEFAULT_ANDROID_ID = "";

    public static final String DEFAULT_ANDROID_UUID = "";

    public static final String DEFAULT_IMSI = "";

    public static final String DEFAULT_GAID = "";

    public static final String DEFAULT_UID = "";

    public static final String DEFAULT_BRAND = "";

    public static final String DEFAULT_IMEI1 = "";

    public static final String DEFAULT_IMEI2 = "";

    public static final String DEFAULT_OAID = "";

    public static final String DEFAULT_VAID = "";

    public static final String DEFAULT_AAID = "";

    public static final String DEFAULT_MSA_UDID = "";

    public static final String DEFAULT_IDFA_MD5 = "";

    public static final String DEFAULT_IMEI_MD5 = "";

    public static final String DEFAULT_ANDROID_ID_MD5 = "";

    public static final String DEFAULT_GAID_MD5 = "";

    public static final String DEFAULT_OAID_MD5 = "";

    public static final String DEFAULT_IMEI1_MD5 = "";

    public static final String DEFAULT_IMEI2_MD5 = "";

    public static final Boolean DEFAULT_IS_CUSTOM_IMEI = false;

    public static final Boolean DEFAULT_IS_CUSTOM_OAID = false;

    public static final Boolean DEFAULT_IS_CUSTOM_IDFA = false;

    public static final Boolean DEFAULT_IS_CUSTOM_ANDROID_ID = false;

    public static final String DEFAULT_OAID_API = "";

    /**
     * [必填]iOS设备的IDFA，格式要求[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String idfa;

    /**
     * 内部生成
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String udid;

    /**
     * 用户id
     */
    @WireField(tag = 3, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String user_id;

    /**
     * [必填]设备IMEI，IOS设备填空
     */
    @WireField(tag = 4, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei;

    /**
     * [必填]android设备的android_id，ios设备填空
     */
    @WireField(tag = 5, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String android_id;

    /**
     * Android系统为开发者提供的用于标识手机设备的串号,会根据不同的手机设备返回IMEI，MEID或者ESN码
     */
    @WireField(tag = 6, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String android_uuid;

    /**
     * Sim Serial Number
     */
    @WireField(tag = 7, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imsi;

    /**
     * 在Android设备上找到Google advertising ID (GAID)
     */
    @WireField(tag = 8, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String gaid;

    /**
     * 用户在sigmob的唯一标识。
     */
    @WireField(tag = 9, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String uid;

    /**
     * 手机品牌名称，安卓专属
     */
    @WireField(tag = 10, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String brand;

    @WireField(tag = 11, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei1;

    @WireField(tag = 12, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei2;

    /**
     * msa 联盟 oaid 匿名设备标识符(Open Anonymous Device Identifier)最长64位
     */
    @WireField(tag = 13, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String oaid;

    /**
     * msa 联盟 vaid 开发者匿名设备标识符(Vender Anonymous Device Identifier)最长64位
     */
    @WireField(tag = 14, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String vaid;

    /**
     * msa 联盟 aaid 应用匿名设备标识符(Application Anonymous Device Identifier)最长64位
     */
    @WireField(tag = 15, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String aaid;

    /**
     * msa 联盟 udid
     */
    @WireField(tag = 16, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String msa_udid;

    /**
     * iOS设备的IDFA MD5值
     */
    @WireField(tag = 17, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String idfa_md5;

    /**
     * Android设备IMEI MD5值，iOS设备填空
     */
    @WireField(tag = 18, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei_md5;

    /**
     * Android设备的android_id MD5值，iOS设备填空
     */
    @WireField(tag = 19, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String android_id_md5;

    /**
     * Android设备Google advertising ID (GAID) MD5值
     */
    @WireField(tag = 20, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String gaid_md5;

    /**
     * msa 联盟 oaid 匿名设备标识符(Open Anonymous Device Identifier) MD5值
     */
    @WireField(tag = 21, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String oaid_md5;

    /**
     * Android设备IMEI1 MD5值
     */
    @WireField(tag = 22, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei1_md5;

    /**
     * Android设备IMEI2 MD5值
     */
    @WireField(tag = 23, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String imei2_md5;

    /**
     * false ：SDK 主动获取的设备id  true ：开发者设置的设备id
     */
    @WireField(tag = 24, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean is_custom_imei;

    @WireField(tag = 25, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean is_custom_oaid;

    @WireField(tag = 26, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean is_custom_idfa;

    @WireField(tag = 27, adapter = "com.squareup.wire.ProtoAdapter#BOOL")
    public final Boolean is_custom_android_id;

    @WireField(tag = 32, adapter = "com.squareup.wire.ProtoAdapter#STRING")
    public final String oaid_api;

    public DeviceId(String idfa, String udid, String user_id, String imei, String android_id, String android_uuid, String imsi, String gaid, String uid, String brand, String imei1, String imei2, String oaid, String vaid, String aaid, String msa_udid, String idfa_md5, String imei_md5, String android_id_md5, String gaid_md5, String oaid_md5, String imei1_md5, String imei2_md5, Boolean is_custom_imei, Boolean is_custom_oaid, Boolean is_custom_idfa, Boolean is_custom_android_id, String oaid_api) {
        this(idfa, udid, user_id, imei, android_id, android_uuid, imsi, gaid, uid, brand, imei1, imei2, oaid, vaid, aaid, msa_udid, idfa_md5, imei_md5, android_id_md5, gaid_md5, oaid_md5, imei1_md5, imei2_md5, is_custom_imei, is_custom_oaid, is_custom_idfa, is_custom_android_id, oaid_api, ByteString.EMPTY);
    }

    public DeviceId(String idfa, String udid, String user_id, String imei, String android_id, String android_uuid, String imsi, String gaid, String uid, String brand, String imei1, String imei2, String oaid, String vaid, String aaid, String msa_udid, String idfa_md5, String imei_md5, String android_id_md5, String gaid_md5, String oaid_md5, String imei1_md5, String imei2_md5, Boolean is_custom_imei, Boolean is_custom_oaid, Boolean is_custom_idfa, Boolean is_custom_android_id, String oaid_api, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.idfa = idfa;
        this.udid = udid;
        this.user_id = user_id;
        this.imei = imei;
        this.android_id = android_id;
        this.android_uuid = android_uuid;
        this.imsi = imsi;
        this.gaid = gaid;
        this.uid = uid;
        this.brand = brand;
        this.imei1 = imei1;
        this.imei2 = imei2;
        this.oaid = oaid;
        this.vaid = vaid;
        this.aaid = aaid;
        this.msa_udid = msa_udid;
        this.idfa_md5 = idfa_md5;
        this.imei_md5 = imei_md5;
        this.android_id_md5 = android_id_md5;
        this.gaid_md5 = gaid_md5;
        this.oaid_md5 = oaid_md5;
        this.imei1_md5 = imei1_md5;
        this.imei2_md5 = imei2_md5;
        this.is_custom_imei = is_custom_imei;
        this.is_custom_oaid = is_custom_oaid;
        this.is_custom_idfa = is_custom_idfa;
        this.is_custom_android_id = is_custom_android_id;
        this.oaid_api = oaid_api;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.idfa = idfa;
        builder.udid = udid;
        builder.user_id = user_id;
        builder.imei = imei;
        builder.android_id = android_id;
        builder.android_uuid = android_uuid;
        builder.imsi = imsi;
        builder.gaid = gaid;
        builder.uid = uid;
        builder.brand = brand;
        builder.imei1 = imei1;
        builder.imei2 = imei2;
        builder.oaid = oaid;
        builder.vaid = vaid;
        builder.aaid = aaid;
        builder.msa_udid = msa_udid;
        builder.idfa_md5 = idfa_md5;
        builder.imei_md5 = imei_md5;
        builder.android_id_md5 = android_id_md5;
        builder.gaid_md5 = gaid_md5;
        builder.oaid_md5 = oaid_md5;
        builder.imei1_md5 = imei1_md5;
        builder.imei2_md5 = imei2_md5;
        builder.is_custom_imei = is_custom_imei;
        builder.is_custom_oaid = is_custom_oaid;
        builder.is_custom_idfa = is_custom_idfa;
        builder.is_custom_android_id = is_custom_android_id;
        builder.oaid_api = oaid_api;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof DeviceId)) return false;
        DeviceId o = (DeviceId) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(idfa, o.idfa) && Internal.equals(udid, o.udid) && Internal.equals(user_id, o.user_id) && Internal.equals(imei, o.imei) && Internal.equals(android_id, o.android_id) && Internal.equals(android_uuid, o.android_uuid) && Internal.equals(imsi, o.imsi) && Internal.equals(gaid, o.gaid) && Internal.equals(uid, o.uid) && Internal.equals(brand, o.brand) && Internal.equals(imei1, o.imei1) && Internal.equals(imei2, o.imei2) && Internal.equals(oaid, o.oaid) && Internal.equals(vaid, o.vaid) && Internal.equals(aaid, o.aaid) && Internal.equals(msa_udid, o.msa_udid) && Internal.equals(idfa_md5, o.idfa_md5) && Internal.equals(imei_md5, o.imei_md5) && Internal.equals(android_id_md5, o.android_id_md5) && Internal.equals(gaid_md5, o.gaid_md5) && Internal.equals(oaid_md5, o.oaid_md5) && Internal.equals(imei1_md5, o.imei1_md5) && Internal.equals(imei2_md5, o.imei2_md5) && Internal.equals(is_custom_imei, o.is_custom_imei) && Internal.equals(is_custom_oaid, o.is_custom_oaid) && Internal.equals(is_custom_idfa, o.is_custom_idfa) && Internal.equals(is_custom_android_id, o.is_custom_android_id) && Internal.equals(oaid_api, o.oaid_api);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (idfa != null ? idfa.hashCode() : 0);
            result = result * 37 + (udid != null ? udid.hashCode() : 0);
            result = result * 37 + (user_id != null ? user_id.hashCode() : 0);
            result = result * 37 + (imei != null ? imei.hashCode() : 0);
            result = result * 37 + (android_id != null ? android_id.hashCode() : 0);
            result = result * 37 + (android_uuid != null ? android_uuid.hashCode() : 0);
            result = result * 37 + (imsi != null ? imsi.hashCode() : 0);
            result = result * 37 + (gaid != null ? gaid.hashCode() : 0);
            result = result * 37 + (uid != null ? uid.hashCode() : 0);
            result = result * 37 + (brand != null ? brand.hashCode() : 0);
            result = result * 37 + (imei1 != null ? imei1.hashCode() : 0);
            result = result * 37 + (imei2 != null ? imei2.hashCode() : 0);
            result = result * 37 + (oaid != null ? oaid.hashCode() : 0);
            result = result * 37 + (vaid != null ? vaid.hashCode() : 0);
            result = result * 37 + (aaid != null ? aaid.hashCode() : 0);
            result = result * 37 + (msa_udid != null ? msa_udid.hashCode() : 0);
            result = result * 37 + (idfa_md5 != null ? idfa_md5.hashCode() : 0);
            result = result * 37 + (imei_md5 != null ? imei_md5.hashCode() : 0);
            result = result * 37 + (android_id_md5 != null ? android_id_md5.hashCode() : 0);
            result = result * 37 + (gaid_md5 != null ? gaid_md5.hashCode() : 0);
            result = result * 37 + (oaid_md5 != null ? oaid_md5.hashCode() : 0);
            result = result * 37 + (imei1_md5 != null ? imei1_md5.hashCode() : 0);
            result = result * 37 + (imei2_md5 != null ? imei2_md5.hashCode() : 0);
            result = result * 37 + (is_custom_imei != null ? is_custom_imei.hashCode() : 0);
            result = result * 37 + (is_custom_oaid != null ? is_custom_oaid.hashCode() : 0);
            result = result * 37 + (is_custom_idfa != null ? is_custom_idfa.hashCode() : 0);
            result = result * 37 + (is_custom_android_id != null ? is_custom_android_id.hashCode() : 0);
            result = result * 37 + (oaid_api != null ? oaid_api.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (idfa != null) builder.append(", idfa=").append(idfa);
        if (udid != null) builder.append(", udid=").append(udid);
        if (user_id != null) builder.append(", user_id=").append(user_id);
        if (imei != null) builder.append(", imei=").append(imei);
        if (android_id != null) builder.append(", android_id=").append(android_id);
        if (android_uuid != null) builder.append(", android_uuid=").append(android_uuid);
        if (imsi != null) builder.append(", imsi=").append(imsi);
        if (gaid != null) builder.append(", gaid=").append(gaid);
        if (uid != null) builder.append(", uid=").append(uid);
        if (brand != null) builder.append(", brand=").append(brand);
        if (imei1 != null) builder.append(", imei1=").append(imei1);
        if (imei2 != null) builder.append(", imei2=").append(imei2);
        if (oaid != null) builder.append(", oaid=").append(oaid);
        if (vaid != null) builder.append(", vaid=").append(vaid);
        if (aaid != null) builder.append(", aaid=").append(aaid);
        if (msa_udid != null) builder.append(", msa_udid=").append(msa_udid);
        if (idfa_md5 != null) builder.append(", idfa_md5=").append(idfa_md5);
        if (imei_md5 != null) builder.append(", imei_md5=").append(imei_md5);
        if (android_id_md5 != null) builder.append(", android_id_md5=").append(android_id_md5);
        if (gaid_md5 != null) builder.append(", gaid_md5=").append(gaid_md5);
        if (oaid_md5 != null) builder.append(", oaid_md5=").append(oaid_md5);
        if (imei1_md5 != null) builder.append(", imei1_md5=").append(imei1_md5);
        if (imei2_md5 != null) builder.append(", imei2_md5=").append(imei2_md5);
        if (is_custom_imei != null) builder.append(", is_custom_imei=").append(is_custom_imei);
        if (is_custom_oaid != null) builder.append(", is_custom_oaid=").append(is_custom_oaid);
        if (is_custom_idfa != null) builder.append(", is_custom_idfa=").append(is_custom_idfa);
        if (is_custom_android_id != null)
            builder.append(", is_custom_android_id=").append(is_custom_android_id);
        if (oaid_api != null) builder.append(", oaid_api=").append(oaid_api);
        return builder.replace(0, 2, "DeviceId{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<DeviceId, Builder> {
        public String idfa = DEFAULT_IDFA;

        public String udid = DEFAULT_UDID;

        public String user_id = DEFAULT_USER_ID;

        public String imei = DEFAULT_IMEI;

        public String android_id = DEFAULT_ANDROID_ID;

        public String android_uuid = DEFAULT_ANDROID_UUID;

        public String imsi = DEFAULT_IMSI;

        public String gaid = DEFAULT_GAID;

        public String uid = DEFAULT_UID;

        public String brand = DEFAULT_BRAND;

        public String imei1 = DEFAULT_IMEI1;

        public String imei2 = DEFAULT_IMEI2;

        public String oaid = DEFAULT_OAID;

        public String vaid = DEFAULT_VAID;

        public String aaid = DEFAULT_AAID;

        public String msa_udid = DEFAULT_MSA_UDID;

        public String idfa_md5 = DEFAULT_IDFA_MD5;

        public String imei_md5 = DEFAULT_IMEI_MD5;

        public String android_id_md5 = DEFAULT_ANDROID_ID_MD5;

        public String gaid_md5 = DEFAULT_GAID_MD5;

        public String oaid_md5 = DEFAULT_OAID_MD5;

        public String imei1_md5 = DEFAULT_IMEI1_MD5;

        public String imei2_md5 = DEFAULT_IMEI2_MD5;

        public Boolean is_custom_imei = DEFAULT_IS_CUSTOM_IMEI;

        public Boolean is_custom_oaid = DEFAULT_IS_CUSTOM_OAID;

        public Boolean is_custom_idfa = DEFAULT_IS_CUSTOM_IDFA;

        public Boolean is_custom_android_id = DEFAULT_IS_CUSTOM_ANDROID_ID;

        public String oaid_api = DEFAULT_OAID_API;

        public Builder() {
        }

        /**
         * [必填]iOS设备的IDFA，格式要求[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}
         */
        public Builder idfa(String idfa) {
            this.idfa = idfa;
            return this;
        }

        /**
         * 内部生成
         */
        public Builder udid(String udid) {
            this.udid = udid;
            return this;
        }

        /**
         * 用户id
         */
        public Builder user_id(String user_id) {
            this.user_id = user_id;
            return this;
        }

        /**
         * [必填]设备IMEI，IOS设备填空
         */
        public Builder imei(String imei) {
            this.imei = imei;
            return this;
        }

        /**
         * [必填]android设备的android_id，ios设备填空
         */
        public Builder android_id(String android_id) {
            this.android_id = android_id;
            return this;
        }

        /**
         * Android系统为开发者提供的用于标识手机设备的串号,会根据不同的手机设备返回IMEI，MEID或者ESN码
         */
        public Builder android_uuid(String android_uuid) {
            this.android_uuid = android_uuid;
            return this;
        }

        /**
         * Sim Serial Number
         */
        public Builder imsi(String imsi) {
            this.imsi = imsi;
            return this;
        }

        /**
         * 在Android设备上找到Google advertising ID (GAID)
         */
        public Builder gaid(String gaid) {
            this.gaid = gaid;
            return this;
        }

        /**
         * 用户在sigmob的唯一标识。
         */
        public Builder uid(String uid) {
            this.uid = uid;
            return this;
        }

        /**
         * 手机品牌名称，安卓专属
         */
        public Builder brand(String brand) {
            this.brand = brand;
            return this;
        }

        public Builder imei1(String imei1) {
            this.imei1 = imei1;
            return this;
        }

        public Builder imei2(String imei2) {
            this.imei2 = imei2;
            return this;
        }

        /**
         * msa 联盟 oaid 匿名设备标识符(Open Anonymous Device Identifier)最长64位
         */
        public Builder oaid(String oaid) {
            this.oaid = oaid;
            return this;
        }

        /**
         * msa 联盟 vaid 开发者匿名设备标识符(Vender Anonymous Device Identifier)最长64位
         */
        public Builder vaid(String vaid) {
            this.vaid = vaid;
            return this;
        }

        /**
         * msa 联盟 aaid 应用匿名设备标识符(Application Anonymous Device Identifier)最长64位
         */
        public Builder aaid(String aaid) {
            this.aaid = aaid;
            return this;
        }

        /**
         * msa 联盟 udid
         */
        public Builder msa_udid(String msa_udid) {
            this.msa_udid = msa_udid;
            return this;
        }

        /**
         * iOS设备的IDFA MD5值
         */
        public Builder idfa_md5(String idfa_md5) {
            this.idfa_md5 = idfa_md5;
            return this;
        }

        /**
         * Android设备IMEI MD5值，iOS设备填空
         */
        public Builder imei_md5(String imei_md5) {
            this.imei_md5 = imei_md5;
            return this;
        }

        /**
         * Android设备的android_id MD5值，iOS设备填空
         */
        public Builder android_id_md5(String android_id_md5) {
            this.android_id_md5 = android_id_md5;
            return this;
        }

        /**
         * Android设备Google advertising ID (GAID) MD5值
         */
        public Builder gaid_md5(String gaid_md5) {
            this.gaid_md5 = gaid_md5;
            return this;
        }

        /**
         * msa 联盟 oaid 匿名设备标识符(Open Anonymous Device Identifier) MD5值
         */
        public Builder oaid_md5(String oaid_md5) {
            this.oaid_md5 = oaid_md5;
            return this;
        }

        /**
         * Android设备IMEI1 MD5值
         */
        public Builder imei1_md5(String imei1_md5) {
            this.imei1_md5 = imei1_md5;
            return this;
        }

        /**
         * Android设备IMEI2 MD5值
         */
        public Builder imei2_md5(String imei2_md5) {
            this.imei2_md5 = imei2_md5;
            return this;
        }

        /**
         * false ：SDK 主动获取的设备id  true ：开发者设置的设备id
         */
        public Builder is_custom_imei(Boolean is_custom_imei) {
            this.is_custom_imei = is_custom_imei;
            return this;
        }

        public Builder is_custom_oaid(Boolean is_custom_oaid) {
            this.is_custom_oaid = is_custom_oaid;
            return this;
        }

        public Builder is_custom_idfa(Boolean is_custom_idfa) {
            this.is_custom_idfa = is_custom_idfa;
            return this;
        }

        public Builder is_custom_android_id(Boolean is_custom_android_id) {
            this.is_custom_android_id = is_custom_android_id;
            return this;
        }

        public Builder oaid_api(String oaid_api) {
            this.oaid_api = oaid_api;
            return this;
        }

        @Override
        public DeviceId build() {
            return new DeviceId(idfa, udid, user_id, imei, android_id, android_uuid, imsi, gaid, uid, brand, imei1, imei2, oaid, vaid, aaid, msa_udid, idfa_md5, imei_md5, android_id_md5, gaid_md5, oaid_md5, imei1_md5, imei2_md5, is_custom_imei, is_custom_oaid, is_custom_idfa, is_custom_android_id, oaid_api, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_DeviceId extends ProtoAdapter<DeviceId> {
        public ProtoAdapter_DeviceId() {
            super(FieldEncoding.LENGTH_DELIMITED, DeviceId.class);
        }

        @Override
        public int encodedSize(DeviceId value) {
            return ProtoAdapter.STRING.encodedSizeWithTag(1, value.idfa) + ProtoAdapter.STRING.encodedSizeWithTag(2, value.udid) + ProtoAdapter.STRING.encodedSizeWithTag(3, value.user_id) + ProtoAdapter.STRING.encodedSizeWithTag(4, value.imei) + ProtoAdapter.STRING.encodedSizeWithTag(5, value.android_id) + ProtoAdapter.STRING.encodedSizeWithTag(6, value.android_uuid) + ProtoAdapter.STRING.encodedSizeWithTag(7, value.imsi) + ProtoAdapter.STRING.encodedSizeWithTag(8, value.gaid) + ProtoAdapter.STRING.encodedSizeWithTag(9, value.uid) + ProtoAdapter.STRING.encodedSizeWithTag(10, value.brand) + ProtoAdapter.STRING.encodedSizeWithTag(11, value.imei1) + ProtoAdapter.STRING.encodedSizeWithTag(12, value.imei2) + ProtoAdapter.STRING.encodedSizeWithTag(13, value.oaid) + ProtoAdapter.STRING.encodedSizeWithTag(14, value.vaid) + ProtoAdapter.STRING.encodedSizeWithTag(15, value.aaid) + ProtoAdapter.STRING.encodedSizeWithTag(16, value.msa_udid) + ProtoAdapter.STRING.encodedSizeWithTag(17, value.idfa_md5) + ProtoAdapter.STRING.encodedSizeWithTag(18, value.imei_md5) + ProtoAdapter.STRING.encodedSizeWithTag(19, value.android_id_md5) + ProtoAdapter.STRING.encodedSizeWithTag(20, value.gaid_md5) + ProtoAdapter.STRING.encodedSizeWithTag(21, value.oaid_md5) + ProtoAdapter.STRING.encodedSizeWithTag(22, value.imei1_md5) + ProtoAdapter.STRING.encodedSizeWithTag(23, value.imei2_md5) + ProtoAdapter.BOOL.encodedSizeWithTag(24, value.is_custom_imei) + ProtoAdapter.BOOL.encodedSizeWithTag(25, value.is_custom_oaid) + ProtoAdapter.BOOL.encodedSizeWithTag(26, value.is_custom_idfa) + ProtoAdapter.BOOL.encodedSizeWithTag(27, value.is_custom_android_id) + ProtoAdapter.STRING.encodedSizeWithTag(32, value.oaid_api) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, DeviceId value) throws IOException {
            ProtoAdapter.STRING.encodeWithTag(writer, 1, value.idfa);
            ProtoAdapter.STRING.encodeWithTag(writer, 2, value.udid);
            ProtoAdapter.STRING.encodeWithTag(writer, 3, value.user_id);
            ProtoAdapter.STRING.encodeWithTag(writer, 4, value.imei);
            ProtoAdapter.STRING.encodeWithTag(writer, 5, value.android_id);
            ProtoAdapter.STRING.encodeWithTag(writer, 6, value.android_uuid);
            ProtoAdapter.STRING.encodeWithTag(writer, 7, value.imsi);
            ProtoAdapter.STRING.encodeWithTag(writer, 8, value.gaid);
            ProtoAdapter.STRING.encodeWithTag(writer, 9, value.uid);
            ProtoAdapter.STRING.encodeWithTag(writer, 10, value.brand);
            ProtoAdapter.STRING.encodeWithTag(writer, 11, value.imei1);
            ProtoAdapter.STRING.encodeWithTag(writer, 12, value.imei2);
            ProtoAdapter.STRING.encodeWithTag(writer, 13, value.oaid);
            ProtoAdapter.STRING.encodeWithTag(writer, 14, value.vaid);
            ProtoAdapter.STRING.encodeWithTag(writer, 15, value.aaid);
            ProtoAdapter.STRING.encodeWithTag(writer, 16, value.msa_udid);
            ProtoAdapter.STRING.encodeWithTag(writer, 17, value.idfa_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 18, value.imei_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 19, value.android_id_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 20, value.gaid_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 21, value.oaid_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 22, value.imei1_md5);
            ProtoAdapter.STRING.encodeWithTag(writer, 23, value.imei2_md5);
            ProtoAdapter.BOOL.encodeWithTag(writer, 24, value.is_custom_imei);
            ProtoAdapter.BOOL.encodeWithTag(writer, 25, value.is_custom_oaid);
            ProtoAdapter.BOOL.encodeWithTag(writer, 26, value.is_custom_idfa);
            ProtoAdapter.BOOL.encodeWithTag(writer, 27, value.is_custom_android_id);
            ProtoAdapter.STRING.encodeWithTag(writer, 32, value.oaid_api);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public DeviceId decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.idfa(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 2:
                        builder.udid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 3:
                        builder.user_id(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 4:
                        builder.imei(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 5:
                        builder.android_id(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 6:
                        builder.android_uuid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 7:
                        builder.imsi(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 8:
                        builder.gaid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 9:
                        builder.uid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 10:
                        builder.brand(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 11:
                        builder.imei1(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 12:
                        builder.imei2(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 13:
                        builder.oaid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 14:
                        builder.vaid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 15:
                        builder.aaid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 16:
                        builder.msa_udid(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 17:
                        builder.idfa_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 18:
                        builder.imei_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 19:
                        builder.android_id_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 20:
                        builder.gaid_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 21:
                        builder.oaid_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 22:
                        builder.imei1_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 23:
                        builder.imei2_md5(ProtoAdapter.STRING.decode(reader));
                        break;
                    case 24:
                        builder.is_custom_imei(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 25:
                        builder.is_custom_oaid(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 26:
                        builder.is_custom_idfa(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 27:
                        builder.is_custom_android_id(ProtoAdapter.BOOL.decode(reader));
                        break;
                    case 32:
                        builder.oaid_api(ProtoAdapter.STRING.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public DeviceId redact(DeviceId value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
