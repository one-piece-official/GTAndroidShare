// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: sigmob_common.proto
package com.czhj.sdk.common.models;

import android.os.Parcelable;

import com.czhj.wire.AndroidMessage;
import com.czhj.wire.FieldEncoding;
import com.czhj.wire.Message;
import com.czhj.wire.ProtoAdapter;
import com.czhj.wire.ProtoReader;
import com.czhj.wire.ProtoWriter;
import com.czhj.wire.WireField;
import com.czhj.wire.internal.Internal;
import com.czhj.wire.okio.ByteString;

import java.io.IOException;

public final class Video extends AndroidMessage<Video, Video.Builder> {
    public static final ProtoAdapter<Video> ADAPTER = new ProtoAdapter_Video();

    public static final Parcelable.Creator<Video> CREATOR = AndroidMessage.newCreator(ADAPTER);

    private static final long serialVersionUID = 0L;

    public static final Integer DEFAULT_MAX_DURATION = 0;

    public static final Integer DEFAULT_MIN_DURATION = 0;

    /**
     * 视频最大时长
     */
    @WireField(tag = 1, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer max_duration;

    /**
     * 视频最小时长
     */
    @WireField(tag = 2, adapter = "com.squareup.wire.ProtoAdapter#UINT32")
    public final Integer min_duration;

    public Video(Integer max_duration, Integer min_duration) {
        this(max_duration, min_duration, ByteString.EMPTY);
    }

    public Video(Integer max_duration, Integer min_duration, ByteString unknownFields) {
        super(ADAPTER, unknownFields);
        this.max_duration = max_duration;
        this.min_duration = min_duration;
    }

    @Override
    public Builder newBuilder() {
        Builder builder = new Builder();
        builder.max_duration = max_duration;
        builder.min_duration = min_duration;
        builder.addUnknownFields(unknownFields());
        return builder;
    }

    @Override
    public boolean equals(Object other) {
        if (other == this) return true;
        if (!(other instanceof Video)) return false;
        Video o = (Video) other;
        return unknownFields().equals(o.unknownFields()) && Internal.equals(max_duration, o.max_duration) && Internal.equals(min_duration, o.min_duration);
    }

    @Override
    public int hashCode() {
        int result = super.hashCode;
        if (result == 0) {
            result = unknownFields().hashCode();
            result = result * 37 + (max_duration != null ? max_duration.hashCode() : 0);
            result = result * 37 + (min_duration != null ? min_duration.hashCode() : 0);
            super.hashCode = result;
        }
        return result;
    }

    @Override
    public String toString() {
        StringBuilder builder = new StringBuilder();
        if (max_duration != null) builder.append(", max_duration=").append(max_duration);
        if (min_duration != null) builder.append(", min_duration=").append(min_duration);
        return builder.replace(0, 2, "Video{").append('}').toString();
    }

    public static final class Builder extends Message.Builder<Video, Builder> {
        public Integer max_duration = DEFAULT_MAX_DURATION;

        public Integer min_duration = DEFAULT_MIN_DURATION;

        public Builder() {
        }

        /**
         * 视频最大时长
         */
        public Builder max_duration(Integer max_duration) {
            this.max_duration = max_duration;
            return this;
        }

        /**
         * 视频最小时长
         */
        public Builder min_duration(Integer min_duration) {
            this.min_duration = min_duration;
            return this;
        }

        @Override
        public Video build() {
            return new Video(max_duration, min_duration, super.buildUnknownFields());
        }
    }

    private static final class ProtoAdapter_Video extends ProtoAdapter<Video> {
        public ProtoAdapter_Video() {
            super(FieldEncoding.LENGTH_DELIMITED, Video.class);
        }

        @Override
        public int encodedSize(Video value) {
            return ProtoAdapter.UINT32.encodedSizeWithTag(1, value.max_duration) + ProtoAdapter.UINT32.encodedSizeWithTag(2, value.min_duration) + value.unknownFields().size();
        }

        @Override
        public void encode(ProtoWriter writer, Video value) throws IOException {
            ProtoAdapter.UINT32.encodeWithTag(writer, 1, value.max_duration);
            ProtoAdapter.UINT32.encodeWithTag(writer, 2, value.min_duration);
            writer.writeBytes(value.unknownFields());
        }

        @Override
        public Video decode(ProtoReader reader) throws IOException {
            Builder builder = new Builder();
            long token = reader.beginMessage();
            for (int tag; (tag = reader.nextTag()) != -1; ) {
                switch (tag) {
                    case 1:
                        builder.max_duration(ProtoAdapter.UINT32.decode(reader));
                        break;
                    case 2:
                        builder.min_duration(ProtoAdapter.UINT32.decode(reader));
                        break;
                    default: {
                        FieldEncoding fieldEncoding = reader.peekFieldEncoding();
                        Object value = fieldEncoding.rawProtoAdapter().decode(reader);
                        builder.addUnknownField(tag, fieldEncoding, value);
                    }
                }
            }
            reader.endMessage(token);
            return builder.build();
        }

        @Override
        public Video redact(Video value) {
            Builder builder = value.newBuilder();
            builder.clearUnknownFields();
            return builder.build();
        }
    }
}
